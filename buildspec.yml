version: 0.2

run-as: root
env:
    parameter-store:
        AWS_ACCESS_KEY_ID_PARAM: "AKIAXJVFN4PS5SJERG4U"
        AWS_SECRET_ACCESS_KEY_PARAM: "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"

phases:
  install:
     run-as: root

     runtime-versions:
      python: 3.x

    
     commands:
      - echo installing.... 
      - pip install --upgrade pip
      - pip install awscli
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID_PARAM
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY_PARAM
      - git --version    
       
     finally:
       - echo installing completed

  build:
     run-as: root
#     on-failure: ABORT | CONTINUE
     commands:
       - aws ec2 create-key-pair --key-name MyKeyPair --query 'KeyMaterial' --output text > MyKeyPair.pem
       - chmod 400 MyKeyPair.pem
       - git clone https://github.com/chandraSekhar2529/TaskAxiom.git
       - cd simple-website
       - echo "export PUBLIC_KEY = aaeffxyhvjbbkjkjnnn" > .env
       - INSTANCE_ID=$(aws ec2 run-instances --image-id ami-04893cdb768d0f9ee --count 1 --instance-type t2.micro --key-name MyKeyPair --subnet-id subnet-0ef9c7d5a86c49ffc  --security-group-ids sg-00db824f1b86fcf7f --user-data file://user-data.txt --associate-public-ip-address  --query Instances[*].InstanceId --output text)
       - echo the instance id is $INSTANCE_ID
       - PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query Reservations[*].Instances[*].PublicIpAddress --output text)
       - echo public ip address is $PUBLIC_IP
       - cd ..
       - pwd 
       - scp -i MyKeyPair.pem ~/simple-website ec2-user@$PUBLIC_IP:~/var/www/html
artifacts:
  files:
    - '**/*'

   
